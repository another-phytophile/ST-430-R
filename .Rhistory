install.packages("usethis")
library(ggplot2)
library(dplyr)
library(tinytex)
library(reticulate)
library(ggplot2)
library(dplyr)
library(dbplyr)
detach("package:dbplyr", unload = TRUE)
library(dbplyr)
library(dplyr)
library(dplyr)
update.packages (ask=FALSE)
update.packages (ask=FALSE)
update.packages("knitr")
update.packages("knitr")
update.packages("usethis")
update.packages("knitr")
update.packages("knitr")
update.packages("usethis")
library(usethis)
library(dplyr)
update.packages("dplyr")
library(dplyr)
library(reticulate)
use_condaenv(FALSE)  # This disables the reticulate package
conda_remove("r-reticulate")
update.packages"reticulate"
update.packages"reticulate"
library(reticulate)
update.packages("reticulate")
library(reticulate)
detach("package:reticulate", unload = TRUE)
options(tinytex.verbose = FALSE)
library(ggplot2)
library(dplyr)
library(tinytex)
library(usethis)
options(tinytex.verbose = FALSE)
read.delim2(https://users.stat.ufl.edu/~rrandles/sta4210/Rclassnotes/data/textdatasets/KutnerData/Chapter%20%201%20Data%20Sets/CH01PR19.txt,)
read.delim2("https://users.stat.ufl.edu/~rrandles/sta4210/Rclassnotes/data/textdatasets/KutnerData/Chapter%20%201%20Data%20Sets/CH01PR19.txt")
read.delim2("https://users.stat.ufl.edu/~rrandles/sta4210/Rclassnotes/data/textdatasets/KutnerData/Chapter%20%201%20Data%20Sets/CH01PR19.txt", delim="    ")
help("read.delim2")
read.delim2("https://users.stat.ufl.edu/~rrandles/sta4210/Rclassnotes/data/textdatasets/KutnerData/Chapter%20%201%20Data%20Sets/CH01PR19.txt", sep = " ",strip.white)
read.delim2("https://users.stat.ufl.edu/~rrandles/sta4210/Rclassnotes/data/textdatasets/KutnerData/Chapter%20%201%20Data%20Sets/CH01PR19.txt", sep = " ", strip.white=TRUE)
read.delim2("https://users.stat.ufl.edu/~rrandles/sta4210/Rclassnotes/data/textdatasets/KutnerData/Chapter%20%201%20Data%20Sets/CH01PR19.txt", strip.white=TRUE)
read.delim2("https://users.stat.ufl.edu/~rrandles/sta4210/Rclassnotes/data/textdatasets/KutnerData/Chapter%20%201%20Data%20Sets/CH01PR19.txt", sep = "    ", strip.white=TRUE)
read.delim2("https://users.stat.ufl.edu/~rrandles/sta4210/Rclassnotes/data/textdatasets/KutnerData/Chapter%20%201%20Data%20Sets/CH01PR19.txt", sep = "", strip.white=TRUE)
read.delim2("https://users.stat.ufl.edu/~rrandles/sta4210/Rclassnotes/data/textdatasets/KutnerData/Chapter%20%201%20Data%20Sets/CH01PR19.txt",
sep = "",
strip.white=TRUE
col.name = c(GPA,ACT)
read.delim2("https://users.stat.ufl.edu/~rrandles/sta4210/Rclassnotes/data/textdatasets/KutnerData/Chapter%20%201%20Data%20Sets/CH01PR19.txt",
sep = "",
strip.white=TRUE,
col.name = c(GPA,ACT)
)
read.delim2("https://users.stat.ufl.edu/~rrandles/sta4210/Rclassnotes/data/textdatasets/KutnerData/Chapter%20%201%20Data%20Sets/CH01PR19.txt",
sep = "",
strip.white=TRUE,
col.name = c("GPA","ACT")
)
satgpa <- as_tibble(read.delim2("https://users.stat.ufl.edu/~rrandles/sta4210/Rclassnotes/data/textdatasets/KutnerData/Chapter%20%201%20Data%20Sets/CH01PR19.txt",
sep = "",
strip.white=TRUE,
col.name = c("GPA","ACT")
))
satgpa
satgpa <- read.delim2("https://users.stat.ufl.edu/~rrandles/sta4210/Rclassnotes/data/textdatasets/KutnerData/Chapter%20%201%20Data%20Sets/CH01PR19.txt",
sep = "",
strip.white=TRUE,
col.name = c("GPA","ACT")
)
satgpa
help("read.delim2")
satgpa <- as_tibbleread.delim2("https://users.stat.ufl.edu/~rrandles/sta4210/Rclassnotes/data/textdatasets/KutnerData/Chapter%20%201%20Data%20Sets/CH01PR19.txt",
sep = "",
strip.white=TRUE,
colClasses = c("numeric","numeric")
col.name = c("GPA","ACT")
satgpa <- as_tibbleread.delim2("https://users.stat.ufl.edu/~rrandles/sta4210/Rclassnotes/data/textdatasets/KutnerData/Chapter%20%201%20Data%20Sets/CH01PR19.txt",
sep = "",
strip.white=TRUE,
colClasses = c(numeric,numeric)
col.name = c("GPA","ACT")
satgpa <- as_tibbleread.delim2("https://users.stat.ufl.edu/~rrandles/sta4210/Rclassnotes/data/textdatasets/KutnerData/Chapter%20%201%20Data%20Sets/CH01PR19.txt",
sep = "",
strip.white=TRUE,
colClasses = numeric
col.name = c("GPA","ACT")
satgpa <- as_tibbleread.delim2("https://users.stat.ufl.edu/~rrandles/sta4210/Rclassnotes/data/textdatasets/KutnerData/Chapter%20%201%20Data%20Sets/CH01PR19.txt",
sep = "",
strip.white=TRUE,
colClasses = c(numeric,numeric),
col.name = c("GPA","ACT")
)
satgpa <- as_tibble(read.delim2("https://users.stat.ufl.edu/~rrandles/sta4210/Rclassnotes/data/textdatasets/KutnerData/Chapter%20%201%20Data%20Sets/CH01PR19.txt",
sep = "",
strip.white=TRUE,
colClasses = c(numeric,numeric),
col.name = c("GPA","ACT")
))
satgpa <- as_tibble(read.delim2("https://users.stat.ufl.edu/~rrandles/sta4210/Rclassnotes/data/textdatasets/KutnerData/Chapter%20%201%20Data%20Sets/CH01PR19.txt",
sep = "",
strip.white=TRUE,
colClasses = c("numeric","numeric"),
col.name = c("GPA","ACT")
))
satgpa <- as_tibble(read.delim2("https://users.stat.ufl.edu/~rrandles/sta4210/Rclassnotes/data/textdatasets/KutnerData/Chapter%20%201%20Data%20Sets/CH01PR19.txt",
sep = "",
strip.white=TRUE,
colClasses = c("numeric","integer"),
col.name = c("GPA","ACT")
))
satgpa <- as_tibble(read.delim2("https://users.stat.ufl.edu/~rrandles/sta4210/Rclassnotes/data/textdatasets/KutnerData/Chapter%20%201%20Data%20Sets/CH01PR19.txt",
sep = "",
strip.white=TRUE,
colClasses = c("complex","integer"),
col.name = c("GPA","ACT")
))
satgpa <- as_tibble(read.delim2("https://users.stat.ufl.edu/~rrandles/sta4210/Rclassnotes/data/textdatasets/KutnerData/Chapter%20%201%20Data%20Sets/CH01PR19.txt",
sep = "",
strip.white=TRUE,
colClasses = c("raw","integer"),
col.name = c("GPA","ACT")
))
actgpa <- as_tibble(read.delim2("https://users.stat.ufl.edu/~rrandles/sta4210/Rclassnotes/data/textdatasets/KutnerData/Chapter%20%201%20Data%20Sets/CH01PR19.txt",
sep = "",
strip.white=TRUE,
col.name = c("GPA","ACT")
))
actgpa$GPA <- as.numeric(actgpa$GPA )
satgpa
help("read.delim2")
actgpa$GPA <- as.numeric(actgpa$GPA )
actgpa
ggplot(actgpa,aes(ACT,GPA))+
jitter()
ggplot(actgpa,aes(x=ACT,y=GPA))+
jitter()
ggplot(actgpa,aes(x="ACT",y="GPA"))+
jitter()
ggplot(actgpa,aes(x="ACT",y="GPA"))+
geom_jitter()
actgpa
ggplot(actgpa,aes(x=ACT,y=GPA))+
geom_jitter()
ggplot(actgpa,aes(x=ACT,y=GPA))+
geom_jitter()+
labs(title = paste("GPA to ACt scores by Student"),
subtitle = "by Jerry Yu")
ggplot(actgpa,aes(x=ACT,y=GPA))+
geom_jitter()+
labs(title = paste("Sctterplot of GPA and ACT scores"),
subtitle = "by Jerry Yu")
ggplot(actgpa,aes(x=ACT,y=GPA))+
geom_jitter()+
geom_smooth(method='lm', formula= y~x)+
labs(title = paste("Scatterplot of GPA and ACT scores"),
subtitle = "by Jerry Yu")
ggplot(actgpa,aes(x=ACT,y=GPA))+
geom_jitter()+
geom_smooth(method='lm', formula= y~x)+
labs(title = paste("Scatterplot of GPA and ACT scores"),
subtitle = "by Jerry Yu")
ggplot(actgpa,aes(x=ACT,y=GPA))+
geom_jitter()+
geom_smooth(method='lm', formula= y~x, se=FALSE)+
labs(title = paste("Scatterplot of GPA and ACT scores"),
subtitle = "by Jerry Yu")
help("geom_smooth")
ggplot(actgpa,aes(x=ACT,y=GPA))+
geom_jitter()+
geom_smooth(method='lm', formula= y~x,
se=FALSE,
show.legend=TRUE)+
labs(title = paste("Scatterplot of GPA and ACT scores"),
subtitle = "by Jerry Yu")
install.packages("ggpmisc")
install.packages("ggpmisc")
library(ggpmisc)
ggplot(actgpa,aes(x=ACT,y=GPA))+
geom_jitter()+
geom_smooth(method='lm', formula= y~x,
se=FALSE,
show.legend=TRUE)+
stat_poly_eq(eq.with.lhs = "italic(hat(y))~`=`~",
use_label(c("eq", "R2")))
help("geom_jitter")
ggplot(actgpa,aes(x=ACT,y=GPA))+
geom_jitter(color="turquoise")+
geom_smooth(method='lm', formula= y~x,
se=FALSE,
show.legend=TRUE)+
stat_poly_eq(eq.with.lhs = "italic(hat(y))~`=`~",
use_label(c("eq", "R2")))
ggplot(actgpa,aes(x=ACT,y=GPA))+
geom_jitter(color="turquoise")+
geom_smooth(method='lm', formula= y~x,
se=FALSE,
show.legend=TRUE)+
stat_poly_eq(eq.with.lhs = "italic(hat(y))~`=`~",
use_label(c("eq", "R2")))+
labs(title = paste("Scatterplot of GPA and ACT scores"),
subtitle = "by Jerry Yu")
lm(actgpa,GPA~ACT)
lm(actgpa$GPA~actgpa$ACT)
ggplot(actgpa,aes(x=ACT,y=GPA))+
geom_jitter(color="turquoise")+
geom_smooth(method='lm', formula= y~x,
se=FALSE,
show.legend=TRUE)+
stat_poly_eq(eq.with.lhs = "italic(hat(y))~`=`~",
use_label(c("eq", "R2")))+
labs(title = paste("Scatterplot of GPA and ACT scores"),
subtitle = "by Jerry Yu")
lm(actgpa$GPA~actgpa$ACT)
help("geom_jitter")
lm(GPA~ACT,data=actgpa)
lm(GPA~ACT,data=actgpa)
help("lm")
actgpamodel <- lm(GPA~ACT,data=actgpa)
coef(actgpamodel)
coef(actgpamodel)["ACT"]
predict(actgpamodel,20)
predict(actgpamodel,c(20))
help("predict")
predict(actgpamodel,c(20))
tibble(20)
tibble(c(20))
library(dplyr)
tibble(c(20))
predict(actgpamodel,tibble(c(20)))
#create the model. All subsequent data points are written with inline code.
actgpamodel <- lm(GPA~ACT,data=actgpa)
predict(actgpamodel,tibble(c(20)))
tibble(c(20))
help("tibble")
predict(actgpamodel,tibble(ACT=20)
predict(actgpamodel,tibble(ACT=20)
tibble(ACT=20)
predict(actgpamodel,tibble(ACT=20))
library(ggplot2)
library(dplyr)
library(tinytex)
library(usethis)
library(ggpmisc)
options(tinytex.verbose = FALSE)
resid(actgpamodel)
resid(actgpamodel)[1-3]
resid(actgpamodel)[1:3]
actgparesid <- resid(actgpamodel)[1:3]
print(actgparesid)
mean(ACT,data=actgpa)
mean(ACT,data=actgpa)
mean(actgpa$ACT)
mean(actgpa$GPA)
mean(actgpa$ACT)
predict(actgpamodel,tibble(mean(actgpa$ACT))
predict(actgpamodel,tibble(mean(actgpa$ACT))
predict(actgpamodel,tibble(mean(actgpa$ACT)))
predict(actgpamodel,tibble(mean(actgpa$ACT)))
mean(actgpa$ACT)
predict(actgpamodel,tibble(mean(actgpa$ACT)))
predict(actgpamodel,tibble(mean(actgpa$ACT)))
The point estimate of the change in mean response when the entrance test score increases by one point is `r `coef(actgpamodel)["ACT"]`. The point estimate of the change in mean response when the entrance test score increases by four points is `r 4*coef(actgpamodel)["ACT"]`.
>e. Based on your answer in (c), predict the GPA of a student who scored 20 on the ACT.
The predicted GPA of a student who scores a 20 on the ACT is `r predict(actgpamodel,tibble(ACT=20))`.
f. Based on your answer to (c), find e1, e2, and e3 (the residuals for the first three observations).
predict(actgpamodel,as_tibble(mean(actgpa$ACT)))
mean(actgpa$ACT)
tibble(mean(actgpa$ACT))
actgpamodel,tibble(ACT=mean(actgpa$ACT))
tibble(ACT=mean(actgpa$ACT))
predict(actgpamodel,tibble)
predict(actgpamodel,tibble(ACT=mean(actgpa$ACT)))
surg.data <- read.table("Datasets/Surgical Unit.txt",
header=FALSE,
col.names = c("clot", "PI", "enzy", "liver", "age",
"gender", "mod_use", "heavy_use", "sur_time",
"ln_sur_time"))
surg.data
attach(surg.data)
gender=factor(gender)
surg.data1<- surg.data[ ,seq(1,4)] # new data set
surg.data1
pairs(surg.data1,cex.labels=3, pch=23,bg="orange",
pairs(surg.data1,cex.labels=3, pch=23,bg="orange", cex=2)
pairs(surg.data1, cex.labels=3, pch=23,bg="orange", cex=2)
pairs(surg.data1)
pairs(surg.data1,cex.labels=3, pch=23,bg="orange", cex=2)
par(mfrow=c(2,2))
for(i in 1:ncol(surg.data1)){
hist(surg.data1[,i],main=names(surg.data1)[i],prob=T)
lines(density(surg.data1[,i], na.rm=TRUE),
col="red")
}
boxplot(sur_time ~ gender)
boxplot(clot~ gender, surg.data) # it draws a side-by-side box plot because the variable sex is a qualitative variable
boxplot(PI~ gender, surg.data)
boxplot(enzy~ gender, surg.data)
boxplot(liver~ gender, surg.data)
par(mfrow=c(2,2))
plot(clot,sur_time,main="sur_time on clot")
lines(lowess(sur_time~clot),col="red")
plot(clot,sur_time,main="sur_time on clot")
lines(lowess(sur_time~clot),col="red")
plot(PI,sur_time,main="sur_time on PI")
lines(lowess(sur_time~PI),col="blue")
plot(enzy,sur_time,main="sur_time on enzy")
lines(lowess(sur_time~enzy),col="green")
plot(liver,sur_time,main="sur_time on liver")
plot(clot,sur_time,main="sur_time on clot")
lines(lowess(sur_time~clot),col="red")
plot(clot,sur_time,main="sur_time on clot") lines(lowess(sur_time~clot),col="red")
lines(lowess(sur_time~clot),col="red")
plot(clot,sur_time,main="sur_time on clot")
plot(clot,sur_time,main="sur_time on clot")
lines(lowess(sur_time~clot),col="red")
par(mfrow=c(2,2))
plot(clot,sur_time,main="sur_time on clot")
lines(lowess(sur_time~clot),col="red")
plot(PI,sur_time,main="sur_time on PI")
lines(lowess(sur_time~PI),col="blue")
plot(enzy,sur_time,main="sur_time on enzy")
lines(lowess(sur_time~enzy),col="green")
plot(liver,sur_time,main="sur_time on liver")
lines(lowess(sur_time~liver),col="purple")
#Create all 4 models
lm(sur_time~clot,data=surg.data1)
PIm <- lm(sur_time~PI,surg.data1)
PIm <- lm(sur_time~PI,surg.data1)
#Create all 4 models
clotm <- lm(sur_time~clot,data=surg.data1)
function (v) {
v.m <- lm(sur_time~v,data = surg.data1)
}
surlm (v) {
surlm <- function (v) {
v.m <- lm(sur_time~v,data = surg.data1)
}
surlm(clot)
clot.m
v.m
surlm <- function (v) {
formula <- as.formula(paste("sur_time ~", v))
v.m <- lm(formula, data = surg.data1)
return(v.m)
}
surlm(clot)
formula <- as.formula(paste("sur_time ~", v collapse =" "))
surlm <- function (v) {
formula <- as.formula(paste("sur_time ~", v collapse =" "))
formula <- as.formula(paste("sur_time ~", v)
v.m <- lm(formula, data = surg.data1)
surlm <- function (v) {
formula <- as.formula(paste("sur_time ~", v))
surlm <- function (v) {
formula <- as.formula(paste("sur_time ~", v))
v.m <- lm(formula, data = surg.data1)
return(v.m)
}
surlm(clot)
clot.m
surlm <- function (v) {
formula <- as.formula(paste("sur_time ~", v))
v.m <- lm(formula, data = surg.data1)
return(v.m)
}
surlm(clot)
clot.m
surlm <- function (v) {
v.m <- lm(sur_time ~ v, data = surg.data1)
return(v.m)
}
surlm(clot)
clot.m
surlm <- function (v) {
v.m <- lm(sur_time ~ !!sym(v), data = surg.data1)
return(v.m)
}
surlm(clot)
clot.m
surlm(PI)
PI.m
summary(PI.m)
debug(surlm)
surlm <- function (v) {
v.m <- lm(sur_time ~ !!sym(v), data = surg.data1)
return(v.m)
}
debug(surlm)
surlm(clot)
knitr::opts_chunk$set(echo = TRUE)
library(ggplot2)
library(dplyr)
library(tinytex)
library(tidyverse)
library(ggplot2)
knitr::opts_chunk$set(echo = TRUE)
library(ggplot2)
library(dplyr)
library(tinytex)
library(tidyverse)
satnames <- read.delim2("Datasets/SAT.txt",
nrows = 1,
sep = "",
header = FALSE) %>%
as.character()
ssatnames <- c("State", satnames)
sat <-  as_tibble (read.delim2(
"Datasets/SAT.txt",
header = TRUE,
sep = "",
col.names = ssatnames
))
sat$expend <- 1000 * as.numeric(sat$expend)
sat$salary <- 1000 * as.numeric(sat$salary)
sat$ratio <- as.numeric(sat$ratio)
sat
summary(sat)
#Boxplots
create_boxplot <- function(data, v, xlab, q) {
ggplot(data = data, aes(x = "", y = !!sym(v))) +
geom_boxplot(color = "blue", outlier.color = "red") +
labs(title = paste("Boxplot of", v, "for Question", q),
subtitle = "by Jerry Yu") +
xlab(xlab) +
ylab("")
}
create_boxplot(
sat,
"expend",
"Current expenditure per pupil in average daily attendance\n in public elementary and secondary schools, 1994-95 (dollars)
",
"1"
)
create_boxplot(
sat,
"ratio",
"Average pupil/teacher ratio in public \n elementary and secondary schools, Fall 1994",
"1"
)
create_boxplot(
sat,
"salary",
"Estimated average annual salary of teachers in public \n elementary and secondary schools, 1994-95 (dollars) ",
"1"
)
create_boxplot(sat,
"takers",
"Percentage of all eligible students taking the SAT, 1994-95",
"1")
create_boxplot(sat, "verbal", "Average verbal SAT score, 1994-95", "1")
create_boxplot(sat, "math", "Average math SAT score, 1994-95", "1")
create_boxplot(sat, "total", "Average total score on the SAT, 1994-95", "1")
# Create Histogram
create_histogram <- function(d, v, xlab, q) {
ggplot(data = d, aes(x = !!sym(v), fill = ..count..)) +
geom_histogram() +
scale_fill_gradient(low = "red", high = "blue") +
labs(title = paste("Histogram of", v, "for Question", q),
subtitle = "by Jerry Yu") +
xlab(xlab) +
ylab("Frequency")
}
create_histogram(
sat,
"expend",
"Current expenditure per pupil in average daily attendance\n in public elementary and secondary schools, 1994-95 (dollars)
",
"1"
)
create_histogram(
sat,
"ratio",
"Average pupil/teacher ratio in public \n elementary and secondary schools, Fall 1994",
"1"
)
create_histogram(
sat,
"salary",
"Estimated average annual salary of teachers in public \n elementary and secondary schools, 1994-95 (dollars) ",
"1"
)
create_histogram(sat,
"takers",
"Percentage of all eligible students taking the SAT, 1994-95",
"1")
create_histogram(sat, "verbal", "Average verbal SAT score, 1994-95", "1")
create_histogram(sat, "math", "Average math SAT score, 1994-95", "1")
create_histogram(sat, "total", "Average total score on the SAT, 1994-95 ", "1")
surlm <- function (v) {
v.m <- lm(sur_time ~ !!sym(v), data = surg.data1)
#  return(v.m)
}
surlm(clot)
surlm <- function (v) {
v.m <- lm(sur_time ~ v, data = surg.data1)
#  return(v.m)
}
debug(surlm)
surlm(clot)
force(v)
function (v) {
v.m <- lm(sur_time ~ v, data = surg.data1)
#  return(v.m)
}
surlm(clot)
(sur_time~P
ta1)
force(v)
