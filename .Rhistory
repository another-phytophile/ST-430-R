}
surlm1("clot")
surlm <- function (v) {
# Construct the formula as a string
formula_str <- paste("sur_time ~", v)
# Convert the string to a formula object
formula_obj <- as.formula(formula_str)
v.m <- lm(formula_obj, data = surg.data1)
return(v.m)
}
surlm("clot")
surlm("clot")
surlm("PI")
surlm("enzy")
surlm("liver")
summary(clot.m)
surlm("clot")
summary(clot.m)
surlm("PI")
lm(sur_time~clot,data=surg.data1)
mclot <- lm(sur_time~clot,data=surg.data1)
summary(M.lm)
summary(mclot)
help("lm")
summary(mclot.r.squared)
summary(mclot.rsquared)
summary(mclot,rsquared)
summary(mclot,r.squared)
summary(model)$adj.r.squared
summary(mclot)$r.squared
summary(mclot)
summary(mclot)$r.squared
summary(mclot)$coef[[4]]
summary(mclot)
sigma(mclot)
summary(mclot,r.squared)
summary(mclot)
surlm <- function (v) {
# Construct the formula as a string
formula_str <- paste("sur_time ~", v)
# Convert the string to a formula object
formula_obj <- as.formula(formula_str)
v.m <- lm(formula_obj, data = surg.data1)
line.m <- c(!!sym(v),coeff(v.m),summary(v.m)$r.squared,sigma(mclot))
return(line.m)
}
surlm("PI")
asurlm <- function (v) {
# Construct the formula as a string
formula_str <- paste("sur_time ~", v)
# Convert the string to a formula object
formula_obj <- as.formula(formula_str)
# Fit the model
v.m <- lm(formula_obj, data = surg.data1)
# Create a vector
line.m <- c(v, coeff(v.m), summary(v.m)$r.squared, sigma(mclot))
# Return the vector
return(line.m)
}
asurlm("PI")
coeff(mclot)
summary(mclot)
str(mclot)
summary(mclot)$coefficients
summary(mclot)$coefficients[1:2,]
why <- summary(mclot)$coefficients
why
str(why)
why <- summary(mclot)$coefficients[1,1]
summary(mclot)$coefficients[1,1]
why <- summary(mclot)$coefficients
why
summary(mclot)$coefficients[2,1]
asurlm <- function (v) {
# Construct the formula as a string
formula_str <- paste("sur_time ~", v)
# Convert the string to a formula object
formula_obj <- as.formula(formula_str)
# Fit the model
v.m <- lm(formula_obj, data = surg.data1)
# Create a vector
line.m <- c(v,summary(mclot)$coefficients[1,1],summary(mclot)$coefficients[2,1], summary(v.m)$r.squared, sigma(mclot))
# Return the vector
return(line.m)
}
asurlm("PI")
as_tibble(asurlm("PI"))
list(asurlm("PI"),asurlm("enzy"))
tibble(list(asurlm("PI"),asurlm("enzy")))
df(list(asurlm("PI"),asurlm("enzy")))
do.call(rbind, list(asurlm("PI"),asurlm("enzy")))
do.call(rbind, list(asurlm("clot"),asurlm("PI"),asurlm("enzy"),asurlm("liver")))
as_tibble(do.call(rbind, list(asurlm("clot"),asurlm("PI"),asurlm("enzy"),asurlm("liver"))))
as_tibble(do.call(rbind, list(asurlm("clot"),asurlm("PI"),asurlm("enzy"),asurlm("liver"))),`colnames<-`c("b0","b1","R^2","s = sqrt(MSE)"))
as.data.frame(do.call(rbind, list(
asurlm("clot"), asurlm("PI"), asurlm("enzy"), asurlm("liver")
)),  col.names = c("b0", "b1", "R^2", "s = sqrt(MSE)"))
names(df) <- c("b0", "b1", "R^2", "s = sqrt(MSE)")
df <- as.data.frame(do.call(rbind, list(
asurlm("clot"), asurlm("PI"), asurlm("enzy"), asurlm("liver")
)))
names(df) <- c("b0", "b1", "R^2", "s = sqrt(MSE)")
df
df <- as.data.frame(do.call(rbind, list(
asurlm("clot"), asurlm("PI"), asurlm("enzy"), asurlm("liver")
)))
names(df) <- c("Model with","b0", "b1", "R^2", "s = sqrt(MSE)")
as_tibble(df)
df
surgdf <- as.data.frame(do.call(rbind, list(
asurlm("clot"), asurlm("PI"), asurlm("enzy"), asurlm("liver")
)))
names(surgdf) <- c("Model with","b0", "b1", "R^2", "s = sqrt(MSE)")
as_tibble(surgdf)
surg.data <- read.table(
"Datasets/Surgical Unit.txt",
header = FALSE,
col.names = c(
"clot",
"PI",
"enzy",
"liver",
"age",
"gender",
"mod_use",
"heavy_use",
"sur_time",
"ln_sur_time"
)
)
attach(surg.data)
gender = factor(gender)
surg.data1 <- surg.data[, seq(1, 4)] # new data set
pairs(
surg.data1,
cex.labels = 3,
pch = 23,
bg = "orange",
cex = 2
)
par(mfrow = c(2, 2))
for (i in 1:ncol(surg.data1)) {
hist(surg.data1[, i], main = names(surg.data1)[i], prob = T)
lines(density(surg.data1[, i], na.rm = TRUE),
col = "red")
}
par(mfrow = c(1, 1))
boxplot(sur_time ~ gender)
boxplot(clot ~ gender, surg.data) # it draws a side-by-side box plot because the variable sex is a qualitative variable
boxplot(PI ~ gender, surg.data)
boxplot(enzy ~ gender, surg.data)
boxplot(liver ~ gender, surg.data)
par(mfrow = c(2, 2))
plot(clot, sur_time, main = "sur_time on clot")
lines(lowess(sur_time ~ clot), col = "red")
plot(PI, sur_time, main = "sur_time on PI")
lines(lowess(sur_time ~ PI), col = "blue")
plot(enzy, sur_time, main = "sur_time on enzy")
lines(lowess(sur_time ~ enzy), col = "green")
plot(liver, sur_time, main = "sur_time on liver")
lines(lowess(sur_time ~ liver), col = "purple"
)
#Create all 4 models
asurlm <- function (v) {
# Construct the formula as a string
formula_str <- paste("sur_time ~", v)
# Convert the string to a formula object
formula_obj <- as.formula(formula_str)
# Fit the model
v.m <- lm(formula_obj, data = surg.data1)
# Create a vector
line.m <- c(v,summary(v.m)$coefficients[1,1],summary(v.m)$coefficients[2,1], summary(v.m)$r.squared, sigma(v.m))
# Return the vector
return(line.m)
}
surgdf <- as.data.frame(do.call(rbind, list(
asurlm("clot"), asurlm("PI"), asurlm("enzy"), asurlm("liver")
)))
names(surgdf) <- c("Model with","b0", "b1", "R^2", "s = sqrt(MSE)")
as_tibble(surgdf)
library(faraway)
install.packages("faraway")
library(faraway)
library(ggplot2)
library(dplyr)
library(tinytex)
library(usethis)
library(ggpmisc)
library(faraway)
options(tinytex.verbose = FALSE)
faraway::fat
bfat <- as_tibble(faraway::fat)
bfat
bfat <- as_tibble(faraway::fat)
bfatlm <- function (v) {
# Construct the formula as a string
formula_str <- paste("brozek ~", v)
# Convert the string to a formula object
formula_obj <- as.formula(formula_str)
# Fit the model
v.m <- lm(formula_obj, data = bfat)
# Create a vector
line.m <- c(v,summary(v.m)$coefficients[1,1],summary(v.m)$coefficients[2,1], summary(v.m)$r.squared, sigma(v.m))
# Return the vector
return(line.m)
}
bfat
str(bfat)
bfatlm("age")
lm(brozek~age,date=bfat)
lm(brozek~age,date=bfat)
str(bfat)
lm(brozek ~ age,date=bfat)
lm(brozek ~ age,data=bfat)
summary(lm(brozek ~ age,data=bfat))
bfatlm("age")
str(bfat)
bfatdf <- as.data.frame(do.call(rbind, list(
bfatlm("age"),
bfatlm("weight"),
bfatlm("height"),
bfatlm("adipos"),
bfatlm("free"),
bfatlm("neck"),
bfatlm("chest"),
bfatlm("abdom"),
bfatlm("thigh"),
bfatlm("forearm")
)))
names(surgdf) <- c("Model with","b0", "b1", "R^2", "s = sqrt(MSE)")
as_tibble(surgdf)
names(bfatdf) <- c("Model with","b0", "b1", "R^2", "s = sqrt(MSE)")
as_tibble(bfatdf)
bfatstest <- lm(brozek~age,data = bfat)
bfatstest <- lm(brozek~age,data = bfat)
summary(bfatstestz)
summary(bfatstest)
str(bfatstest)
summary(bfastest)$[2]
summary(bfastest)$resid
summary(bfastest)$residuals
str(bfatstest)
summary(bfastest)$residuals
summary(bfatstest)$residuals
sqrt(mean(summary(bfatstest)$residuals))
mean(summary(bfatstest)$residuals)
sqrt(mean(summary(bfatstest)$residuals))
summary(bfatstest)#$residuals
7.435/250
bfat <- as_tibble(faraway::fat)
bfat
summary(bfatstest)#$residuals
as_tibble(bfatdf)
# Add density plot
density_obj <- density(resid(regcement))
# Add density plot
density_obj <- density(resid(regcement))
regcement <- lm(cement$twentyeightdaystrength~cement$sevendaystrength)
ggplot(data=cement, aes(x=sevendaystrength,y=twentyeightdaystrength)) +
geom_jitter()+
labs(title = paste("Scatterplot of seven-day strength by twenty-eight day strength \n for Question 2"),
subtitle = "by Jerry Yu") +
xlab("seven-day strength,lb/in^3") +
ylab("twenty-eight day strength, lb/in^3")
sevendaystrength <-
c(2300, 3390, 2340, 2890, 3330, 2480, 3380, 2660, 2620, 3340)
twentyeightdaystrength <-
c(4070, 5220, 4640, 4620, 4850, 4120, 5020, 4890, 4190, 4630)
cement <-
tibble("sevendaystrength" = sevendaystrength,
"twentyeightdaystrength" = twentyeightdaystrength)
cement
csum <- summarize(
cement,
sevendaymean = mean(sevendaystrength),
sevendayvar = var(sevendaystrength),
twentyeightdaymean = mean(twentyeightdaystrength),
twentyeightdayvar = var(twentyeightdaystrength),
sxtcor = cor(sevendaystrength,twentyeightdaystrength)
)
ggplot(data=cement, aes(x=sevendaystrength,y=twentyeightdaystrength)) +
geom_jitter()+
labs(title = paste("Scatterplot of seven-day strength by twenty-eight day strength \n for Question 2"),
subtitle = "by Jerry Yu") +
xlab("seven-day strength,lb/in^3") +
ylab("twenty-eight day strength, lb/in^3")
regcement <- lm(cement$twentyeightdaystrength~cement$sevendaystrength)
summary(regcement)
# Add density plot
density_obj <- density(resid(regcement))
lines(density_obj)
# Add density plot
density_obj <- density(resid(regcement))
ggplot(cresid,aes(resid(regcement)))+
geom_histogram(binwidth=50, fill="lightblue") +
geom_density(color="green", adjust=0.0009) +
labs(title = paste("Histogram and Density Plot of Cement Data Residuals"),
subtitle = "by Jerry Yu") +
scale_y_continuous(
"frequency",
sec.axis = sec_axis(~ . * 1, name = "density"))+
xlab("residuals")
cresid <- tibble(resid(regcement))
ggplot(cresid,aes(resid(regcement)))+
geom_histogram(binwidth=50, fill="lightblue") +
geom_density(color="green", adjust=0.0009) +
labs(title = paste("Histogram and Density Plot of Cement Data Residuals"),
subtitle = "by Jerry Yu") +
scale_y_continuous(
"frequency",
sec.axis = sec_axis(~ . * 1, name = "density"))+
xlab("residuals")
knitr::opts_chunk$set(echo = TRUE)
currentc <- c(0,11,10,10,21,21,20)
today <- sample(currentc,1)
today
currentc <- c(0,11,10,10,21,21,20)
today <- sample(currentc,1)
today
knitr::opts_chunk$set(echo = TRUE)
library(ggplot2)
library(ggpmisc)
library(dplyr)
library(tinytex)
library(usethis)
edit_rstudio_snippets()
actgpa <- as_tibble(read.delim2("https://users.stat.ufl.edu/~rrandles/sta4210/Rclassnotes/data/textdatasets/KutnerData/Chapter%20%201%20Data%20Sets/CH01PR19.txt",
sep = "",
strip.white=TRUE,
col.name = c("GPA","ACT")
))
actgpa$GPA <- as.numeric(actgpa$GPA)
actgpa
lm(GPA~ data=actgpa)
lm(GPA~ ACT,data=actgpa)
actgpam <- lm(GPA~ ACT,data=actgpa)
str(actgpam)
sactgpam <- summary(actgpam)
str(sactgpam)
sactgpam$sigma
sactgpam
sactgpam$sigma
str(sactgpam)
sactgpam$df[2]
sactgpam$df[1]
sactgpam$df[3]
str(sactgpam)
sactgpam$df[2]
confint(actgpam)
confint(actgpam,level = 0.95)
str(confint(actgpam,level = 0.95))
confint(actgpam,level = 0.95)
str(confint(actgpam,level = 0.95))
confint(actgpam,level = 0.95)
confint(actgpam,level = 0.95)[2,1]
confint(actgpam,level = 0.95)
confint(actgpam,level = 0.95)[2,1]
actgpa <- as_tibble(read.delim2("https://users.stat.ufl.edu/~rrandles/sta4210/Rclassnotes/data/textdatasets/KutnerData/Chapter%20%201%20Data%20Sets/CH01PR19.txt",
sep = "",
strip.white=TRUE,
col.name = c("GPA","ACT")
))
actgpa$GPA <- as.numeric(actgpa$GPA)
actgpa
actgpam <- lm(GPA~ ACT,data=actgpa)
sactgpam <- summary(actgpam)
# Questions Answered will be with in-line code
str(sactgpam)
sactgpam
sactgpam$sigma
sactgpam$df[2]
str(confint(actgpam,level = 0.95))
confint(actgpam,level = 0.95)[2,2]
confint(actgpam,level = 0.95)
str(sactgpam,c(28),interval="confidence",level=0,95)
predict(actgpam,c(28),interval="confidence",level=0,95)
predict(actgpam,list(28),interval="confidence",level=0,95)
help("tibble")
tibble(ACT=25)
oned <- tibble(ACT=25)
predict(actgpam,interval="confidence",level=0,95)
predict(actgpam,oned,interval="confidence",level=0,95)
oned <- tibble(ACT=25)
predict(actgpam,oned,interval="confidence",level=0,95)
predict(actgpam,oned,interval="confidence",level=0,95) %>% str()
predict(actgpam,oned,interval="confidence",level=0,95) #%>% str()
predict(actgpam,oned,interval="prediction",level=0,95) #%>% str()
predict(actgpam,oned,interval="confidence",level=0,95) #%>% str()
predict(actgpam,oned,interval="prrediction",level=0,95) #%>% str()
predict(actgpam,oned,interval="prediction",level=0,95) #%>% str()
predict(actgpam,oned,interval="confidence",level=0,95) #%>% str()
actg
actgpam
predict(actgpam,oned,interval="confidence",level=0,95) #%>% str()
predict(actgpam,oned,level=0,95) #%>% str()
help("predict")
oned <- data.frame(ACT=25)
predict(actgpam,oned,interval="confidence",level=0,95) #%>% str()
library(ggplot2)
library(dplyr)
library(tinytex)
library(usethis)
library(ggpmisc)
library(faraway)
options(tinytex.verbose = FALSE)
surg.data <- read.table(
"Datasets/Surgical Unit.txt",
header = FALSE,
col.names = c(
"clot",
"PI",
"enzy",
"liver",
"age",
"gender",
"mod_use",
"heavy_use",
"sur_time",
"ln_sur_time"
)
)
attach(surg.data)
gender = factor(gender)
surg.data1 <- surg.data[, seq(1, 4)] # new data set
pairs(
surg.data1,
cex.labels = 3,
pch = 23,
bg = "orange",
cex = 2
)
par(mfrow = c(2, 2))
for (i in 1:ncol(surg.data1)) {
hist(surg.data1[, i], main = names(surg.data1)[i], prob = T)
lines(density(surg.data1[, i], na.rm = TRUE),
col = "red")
}
par(mfrow = c(1, 1))
boxplot(sur_time ~ gender)
boxplot(clot ~ gender, surg.data) # it draws a side-by-side box plot because the variable sex is a qualitative variable
boxplot(PI ~ gender, surg.data)
boxplot(enzy ~ gender, surg.data)
boxplot(liver ~ gender, surg.data)
par(mfrow = c(2, 2))
plot(clot, sur_time, main = "sur_time on clot")
lines(lowess(sur_time ~ clot), col = "red")
plot(PI, sur_time, main = "sur_time on PI")
lines(lowess(sur_time ~ PI), col = "blue")
plot(enzy, sur_time, main = "sur_time on enzy")
lines(lowess(sur_time ~ enzy), col = "green")
plot(liver, sur_time, main = "sur_time on liver")
lines(lowess(sur_time ~ liver), col = "purple"
)
#Create all 4 models
asurlm <- function (v) {
# Construct the formula as a string
formula_str <- paste("sur_time ~", v)
# Convert the string to a formula object
formula_obj <- as.formula(formula_str)
# Fit the model
v.m <- lm(formula_obj, data = surg.data1)
# Create a vector
line.m <- c(v,summary(v.m)$coefficients[1,1],summary(v.m)$coefficients[2,1], summary(v.m)$r.squared, sigma(v.m))
# Return the vector
return(line.m)
}
surgdf <- as.data.frame(do.call(rbind, list(
asurlm("clot"), asurlm("PI"), asurlm("enzy"), asurlm("liver")
)))
names(surgdf) <- c("Model with","b0", "b1", "R^2", "s = sqrt(MSE)")
as_tibble(surgdf)
regcement <- lm(cement$twentyeightdaystrength~cement$sevendaystrength)
regcement <- lm(cement$twentyeightdaystrength~cement$sevendaystrength)
ggplot(data=cement, aes(x=sevendaystrength,y=twentyeightdaystrength)) +
geom_jitter()+
labs(title = paste("Scatterplot of seven-day strength by twenty-eight day strength \n for Question 2"),
subtitle = "by Jerry Yu") +
xlab("seven-day strength,lb/in^3") +
ylab("twenty-eight day strength, lb/in^3")
sevendaystrength <-
c(2300, 3390, 2340, 2890, 3330, 2480, 3380, 2660, 2620, 3340)
twentyeightdaystrength <-
c(4070, 5220, 4640, 4620, 4850, 4120, 5020, 4890, 4190, 4630)
cement <-
tibble("sevendaystrength" = sevendaystrength,
"twentyeightdaystrength" = twentyeightdaystrength)
cement
lm(twentyeightdaystrength~sevendaystrength,data=cement)
summary(cement)
cementm <- lm(twentyeightdaystrength~sevendaystrength,data=cement)
cementn <- data.frame(sevendaystrength=2000)
predict(cementm,cementn,interval="confidence",level=0,95)
predict(cementm,cementn,interval="confidence",level=0,95,se.fit = TRUE)
predict(cementm,cementn,interval="confidence",level=0,95,se.fit = TRUE)
predict(cementm,cementn,interval="confidence",level=0,95)
cementn <- data.frame(sevendaystrength=2000)
predict(cementm,cementn,interval="confidence",level=0,95)
predict(cementm,cementn,interval="confidence",level=0,95,se.fit = TRUE)
predict(cementm,cementn,interval=c("none","confidence","prediction")level=0,95,se.fit = TRUE)
predict(cementm,cementn,interval=c("none","confidence","prediction"),level=0,95,se.fit = TRUE)
sevendaystrength <-
c(2300, 3390, 2340, 2890, 3330, 2480, 3380, 2660, 2620, 3340)
twentyeightdaystrength <-
c(4070, 5220, 4640, 4620, 4850, 4120, 5020, 4890, 4190, 4630)
cement <-
tibble("sevendaystrength" = sevendaystrength,
"twentyeightdaystrength" = twentyeightdaystrength)
cement
cementm <- lm(twentyeightdaystrength~sevendaystrength,data=cement)
cementn <- data.frame(sevendaystrength=2000)
predict(cementm,cementn,interval=c("none","confidence","prediction"),level=0,95,se.fit = TRUE)
predict(cementm,cementn,interval=c("none","confidence","prediction"),level=0,95,se.fit = TRUE)
